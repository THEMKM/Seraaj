version: '3.8'
services:
  db:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_USER: seraaj
      POSTGRES_PASSWORD: seraaj
      POSTGRES_DB: seraaj
      POSTGRES_INITDB_ARGS: --auth-host=scram-sha-256
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "seraaj"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7
    ports:
      - "6379:6379"

  backend:
    build: ./backend
    environment:
      - DATABASE_URL=postgresql+psycopg2://seraaj:seraaj@db:5432/seraaj
      - SECRET_KEY=changeme
      - APP_ENV=local
      - RESET_ON_START=true
      - SEED_DEMO_DATA=true
      - REDIS_URL=redis://redis:6379/0
      - BACKEND_PORT=${BACKEND_PORT:-8000}
    volumes:
      - ./backend:/code
    ports:
      - "${BACKEND_PORT:-8000}:${BACKEND_PORT:-8000}"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  worker:
    build: ./backend
    command: celery -A app.matching worker -B --loglevel=info
    environment:
      - DATABASE_URL=postgresql+psycopg2://seraaj:seraaj@db:5432/seraaj
      - REDIS_URL=redis://redis:6379/0
      - APP_ENV=local
      - SECRET_KEY=changeme
    volumes:
      - ./backend:/code
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  frontend:
    image: node:18
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    environment:
      - FRONTEND_PORT=${FRONTEND_PORT:-5173}
      - BACKEND_PORT=${BACKEND_PORT:-8000}
      - VITE_BACKEND_URL=http://backend:${BACKEND_PORT:-8000}
    volumes:
      - ./frontend:/app
    ports:
      - "${FRONTEND_PORT:-5173}:${FRONTEND_PORT:-5173}"
    depends_on:
      backend:
        condition: service_started
volumes:
  db_data:
